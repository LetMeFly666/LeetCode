'''
Author: LetMeFly
Date: 2024-04-16 10:08:48
LastEditors: LetMeFly
LastEditTime: 2024-04-16 10:18:06
'''
from typing import List

class Solution:
    def canDesc(self, t, initial, color, color2cnt) -> int:
        for i in initial:
            if color[i] == color[t] and i != t:
                return 0
        return color2cnt[color[t]]
    
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        color = [0] * len(graph)
        color2cnt = [0] * (len(graph) + 1)
        cntColor = 0
        for i in range(len(graph)):
            if color[i]:
                continue
            cntColor += 1
            color[i] = cntColor
            color2cnt[cntColor] = 1
            q = [i]
            while q:
                thisNode = q.pop()
                for j in range(len(graph)):
                    if graph[thisNode][j] and not color[j]:
                        color[j] = cntColor
                        color2cnt[cntColor] += 1
                        q.append(j)
        ans, maxDesc = 0, -1
        initial.sort()
        for t in initial:
            thisDesc = self.canDesc(t, initial, color, color2cnt)
            if thisDesc > maxDesc:
                maxDesc = thisDesc
                ans = t
        return ans
