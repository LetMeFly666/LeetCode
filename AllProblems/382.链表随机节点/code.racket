; Definition for singly-linked list:
#|

; val : integer?
; next : (or/c list-node? #f)
(struct list-node
  (val next) #:mutable #:transparent)

; constructor
(define (make-list-node [val 0])
  (list-node val #f))

|#

(define solution%
  (class object%
    (super-new)
    
    ; head : (or/c list-node? #f)
    (init-field
      head)
    
    ; get-random : -> exact-integer?
    (define/public (get-random)
      )))

;; Your solution% object will be instantiated and called as such:
;; (define obj (new solution% [head head]))
;; (define param_1 (send obj get-random))