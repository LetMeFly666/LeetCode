(define solution%
  (class object%
    (super-new)
    
    ; m : exact-integer?
    ; n : exact-integer?
    (init-field
      m
      n)
    
    ; flip : -> (listof exact-integer?)
    (define/public (flip)
      )
    ; reset : -> void?
    (define/public (reset)
      )))

;; Your solution% object will be instantiated and called as such:
;; (define obj (new solution% [m m] [n n]))
;; (define param_1 (send obj flip))
;; (send obj reset)