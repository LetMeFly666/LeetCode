(define combination-iterator%
  (class object%
    (super-new)
    
    ; characters : string?
    ; combination-length : exact-integer?
    (init-field
      characters
      combination-length)
    
    ; next : -> string?
    (define/public (next)
      )
    ; has-next : -> boolean?
    (define/public (has-next)
      )))

;; Your combination-iterator% object will be instantiated and called as such:
;; (define obj (new combination-iterator% [characters characters] [combination-length combination-length]))
;; (define param_1 (send obj next))
;; (define param_2 (send obj has-next))