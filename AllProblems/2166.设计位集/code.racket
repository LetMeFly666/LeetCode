(define bitset%
  (class object%
    (super-new)
    
    ; size : exact-integer?
    (init-field
      size)
    
    ; fix : exact-integer? -> void?
    (define/public (fix idx)
      )
    ; unfix : exact-integer? -> void?
    (define/public (unfix idx)
      )
    ; flip : -> void?
    (define/public (flip)
      )
    ; all : -> boolean?
    (define/public (all)
      )
    ; one : -> boolean?
    (define/public (one)
      )
    ; count : -> exact-integer?
    (define/public (count)
      )
    ; to-string : -> string?
    (define/public (to-string)
      )))

;; Your bitset% object will be instantiated and called as such:
;; (define obj (new bitset% [size size]))
;; (send obj fix idx)
;; (send obj unfix idx)
;; (send obj flip)
;; (define param_4 (send obj all))
;; (define param_5 (send obj one))
;; (define param_6 (send obj count))
;; (define param_7 (send obj to-string))