(define locking-tree%
  (class object%
    (super-new)
    
    ; parent : (listof exact-integer?)
    (init-field
      parent)
    
    ; lock : exact-integer? exact-integer? -> boolean?
    (define/public (lock num user)
      )
    ; unlock : exact-integer? exact-integer? -> boolean?
    (define/public (unlock num user)
      )
    ; upgrade : exact-integer? exact-integer? -> boolean?
    (define/public (upgrade num user)
      )))

;; Your locking-tree% object will be instantiated and called as such:
;; (define obj (new locking-tree% [parent parent]))
;; (define param_1 (send obj lock num user))
;; (define param_2 (send obj unlock num user))
;; (define param_3 (send obj upgrade num user))